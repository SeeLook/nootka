
                N O O T K A
              HOW TO COMPILE

##########################################################
#############   Requirements:                #############
##########################################################
- Qt libraries (at least 4.7 version)
- QtMultimedia
  uder Windows and MacOs it is included with Qt/Qt-SDK package
  but under Linux it is separate package:
    - rpm based (Suse, Fedora) it is in qt-devel
    - deb based (Ubuntu, Mint) it is qtmultimediakit and qtmibility-dev
- FFTW libraries (http://www.fftw.org/)
    libfftw3-dev
- libasound-dev under linux

##########################################################
###############    Building                  #############
##########################################################
- Unpack tarball
- go into unpacked directory
- create some dir (f. e. "build")
- go to build dir
- cmake ../ (or ccmake or qtcmake with GUI)
  if You get error about not found libfftw or libQtMultimedia(Kit1)
  put it manually:
      -DFFTW3_LIBRARIES=/path_to/libfftw3f.la(dll)
      -DFFTW3_INCLUDE_DIRS=/path_to_dir_with/fftw3.h
      -DQTMULTIMEDIAKIT_LIBRARY=/path_to_dir_with/libqtmultimedia.la(dll)
      -DQTMULTIMEDIA_INCLUDE_DIRS=/path_to_dir_with/qaudio.h
      -DQTMOBILITY_INCLUDE_DIRS=/path_to_dir_with/qmobilityglobal.h (Ubuntu only)
    also
      -DCMAKE_INSTALL_PREFIX=/install/dir to change instalation target
      -DCMAKE_BUILD_TYPE=debug to build Nootka in debug mode
    so You can invoke:
      cmake -DCMAKE_INSTALL_PREFIX=/my/special/dir ../
      or do the same in GUI
      
- then call
  make 
  or 
  make -j[number of CPU cores], fe.: make -j4
- make install (usually as root)
  alternatively You can invoke 
     make install DESTDIR=/Your/Dir
  and push the instalation wherever You want (similary to -DCMAKE_INSTALL_PREFIX)

to remove (uninstall)
- make uninstall (usually as root)

##########################################################
###################### Packaging #########################
##########################################################
You can easyly generate rpm and deb package.
1. For deb call:
  fakeroot cpack -G DEB
  (obviously packages for build debian packages are needed)
  !!! Some versions of cmake case problems with 
  !!! propper rights to files in creating deb package
  !!! check it by lintian
2. For rpm call
  cpack -G RPM
  
  
  !!!!!!!!!!!! GOOD LUCK !!!!!!!!!

##########################################################
#### How to prepare developement enviroment under MacOs ##
##########################################################
1. Install Xcode & X11 (from MacOs install DVD). XCode SDK is not required
2. Install MacPorts 
	http://www.macports.org/install.php
	and in terminal type:
    sudo port install pkgconfig cmake mercurial fftw-3-single
  alternatively You can use Fink


3. Download and install QT libraries:
  go to 
    http://qt-project.org/downloads
    and take Qt libraries version 4.8 for Mac (not 5.0 nor 4.8)
    and install.

4. Now You can go to to Building section

5. make install under MacOs generates independent boundle with all needed frameworks inside
   however You mast put during invokeing cmake -DFFTW3_LIBRARIES=/path_to_real_file_with_libfftw3f
   (cmake automagicaly finds only symbolic link)


 





