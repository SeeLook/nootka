appimage-amd64:
  image: ubuntu:16.04

  before_script:
    - apt-get update
    - apt-get install -y mesa-common-dev libsoundtouch-dev libfftw3-dev libasound2-dev libogg-dev libvorbis-dev libpulse-dev libjack-dev cmake git wget build-essential software-properties-common
    - add-apt-repository -y -u ppa:beineri/opt-qt-5.12.10-xenial
    - apt-get install -y qt512base qt512graphicaleffects qt512translations qt512x11extras libgl1-mesa-glx libgl1-mesa-dri qt512quickcontrols2 qt512quickcontrols libgl1-mesa-dev

  script:
    - . "/opt/qt512/bin/qt512-env.sh" || true
    - cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/usr -DWITH_STATIC_LIB=ON -DQT_QMAKE_EXECUTABLE=/opt/qt512/bin/qmake .
    - make
    - make appimage

  artifacts:
    name: "Nootka-AppImage-$(head -1 $PWD/changes | sed 's/\ /-/g')-b$(git rev-list HEAD --count)"
    paths:
      - 'nootka-*.AppImage*'


windows_installer:
  image: burningdaylight/mingw-arch:qt

  before_script:
    - yay --noconfirm -S nsis
    - yay -S --noconfirm aur/mingw-w64-fftw-bin aur/mingw-w64-libogg aur/mingw-w64-libvorbis
    - mkdir bin
    - ln -s /usr/bin/x86_64-w64-mingw32-windres bin/windres.exe
    - PATH=$PWD/bin:$PATH
    - export PATH

  script:
    - mkdir installs
    - x86_64-w64-mingw32-cmake . -DCMAKE_BUILD_TYPE=Release -DCOPY_GCC_LIBS=OFF -DCMAKE_INSTALL_PREFIX=installs -DQT_TRANSLATIONS_DIR=/usr/x86_64-w64-mingw32/share/qt/translations/ -DFFTW3_LIBRARIES=/usr/x86_64-w64-mingw32/bin/libfftw3f-3.dll -DVORBISFILE_LIB=/usr/x86_64-w64-mingw32/bin/libvorbisfile-3.dll -DVORBIS_LIB=/usr/x86_64-w64-mingw32/bin/libvorbis-0.dll -DOGG_LIB=/usr/x86_64-w64-mingw32/bin/libogg-0.dll
    - make
    - make install
    - packaging/mingw-w64/nootka-mingw-w64.sh
    - makensis installs/nootka-utf16.nsi
    - cp installs/Nootka*Windows*.exe ./

  artifacts:
    name: "Nootka-Windows-$(head -1 $PWD/changes | sed 's/\ /-/g')-b$(git rev-list HEAD --count)"
    paths:
     - 'Nootka*Windows*.exe'
